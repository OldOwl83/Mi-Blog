<script> 

    window.location.assign(`https://hellocode-blog.net?path=${ window.location.pathname }`);
    
</script>

<div class="fichas_t">
    <h5><span class="material-icons">assignment</span> FICHA TÉCNICA</h5>
    <ul>
        <li><span class="subtitulos">Nombre</span>: Puzzlin</li>
        <li><span class="subtitulos">Período de desarrollo</span>: Enero 2022</li>
        <li><span class="subtitulos"><em>Framework</em></span>: React</li>
        <li><span class="subtitulos">Categoría</span>: Juego</li>
        <li><span class="subtitulos">Implementaciones destacadas</span>: Componentes funcionales, <em>Hooks</em>, funciones <em>async</em>, <em>Pruebas Jest</em>, <em>Routing</em></li>
        <li><a href="https://puzzlin-552f1.web.app/" target="_blank"><span class="material-icons">arrow_forward</span> Ir a la página del juego</a></li>
        <li><a href="https://github.com/OldOwl83/Puzzlin" target="_blank"><span class="material-icons">arrow_forward</span> Ir al código</a></li>
    </ul>
</div>

<h3>Puzzlin</h3>

<h4>Presentación</h4>

<p class="publicaciones">Juego de rompecabezas basado en imágenes servidas por la API de <em>Unsplash</em> a partir de búsquedas realizadas por el propio usuario. La reconstrucción de la imagen seleccionada se realiza con el desplazamiento de las piezas sobre una grilla configurada también por el usuario. Se trata de un primer ejercicio montado sobre React, que me ha servido para familiarizarme con el diseño de componentes, de <em>custom hooks</em> y del árbol de rutas basado en la librería 'react-router-dom'. Además, intenté poner algún cuidado en el aspecto estético y la UX; para lo cual implementé algunas animaciones CSS que debieron ser coordinadas con los cambios de estado de los componentes React.</p>

<h4>Implementaciones especiales</h4>

<ul class="publicaciones">
    <li><span class="subtitulos">Hooks</span>: </li>
    <li><span class="subtitulos"><em>Routing</em> y pasaje de parámetros</span>: </li>
    <li><span class="subtitulos">Consultas a la API y funciones <em>async</em></span>: 
</ul>
